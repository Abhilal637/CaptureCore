<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Edit Product</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet"/>
</head>
<body class="bg-gray-100 py-10 px-6 font-sans text-gray-800">

  <div class="max-w-4xl mx-auto bg-white p-8 rounded shadow">
    <h2 class="text-2xl font-semibold mb-6">Edit Product</h2>

    <form
      action="/admin/products/edit/<%= product._id %>"
      method="POST"
      enctype="multipart/form-data"
      class="space-y-6"
    >
      <!-- Product Name -->
      <div>
        <label for="name" class="block text-sm font-medium">Product Name</label>
        <input type="text" name="name" id="name" value="<%= product.name %>"
               class="mt-1 w-full border rounded px-3 py-2" required data-required />
        <p class="field-error mt-1 text-sm text-red-600"></p>
      </div>

      <!-- Price -->
      <div>
        <label for="price" class="block text-sm font-medium">Price</label>
        <input type="number" name="price" id="price" value="<%= product.price %>"
               class="mt-1 w-full border rounded px-3 py-2" required data-required />
        <p class="field-error mt-1 text-sm text-red-600"></p>
      </div>

      <!-- Brand -->
      <div>
        <label for="brand" class="block text-sm font-medium">Brand</label>
        <input type="text" name="brand" id="brand" value="<%= product.brand || '' %>"
               class="mt-1 w-full border rounded px-3 py-2" />
        <p class="field-error mt-1 text-sm text-red-600"></p>
      </div>

      <!-- Specs -->
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div id="cameraSpecs" class="spec-group hidden">
          <label class="block text-sm font-medium">Megapixel</label>
          <select name="megapixelBucket" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="12-16" <%= product.megapixelBucket === '12-16' ? 'selected' : '' %>>12-16 MP</option>
            <option value="16-24" <%= product.megapixelBucket === '16-24' ? 'selected' : '' %>>16-24 MP</option>
            <option value="24+" <%= product.megapixelBucket === '24+' ? 'selected' : '' %>>24+ MP</option>
          </select>
          <label class="block text-sm font-medium mt-3">Battery Type</label>
          <select name="batteryType" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="lithium-ion" <%= product.batteryType === 'lithium-ion' ? 'selected' : '' %>>Lithium Ion</option>
            <option value="rechargeable" <%= product.batteryType === 'rechargeable' ? 'selected' : '' %>>Rechargeable</option>
          </select>
          <label class="block text-sm font-medium mt-3">Camera Type</label>
          <select name="cameraType" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="dslr" <%= product.cameraType === 'dslr' ? 'selected' : '' %>>DSLR</option>
            <option value="mirrorless" <%= product.cameraType === 'mirrorless' ? 'selected' : '' %>>Mirrorless</option>
            <option value="point-shoot" <%= product.cameraType === 'point-shoot' ? 'selected' : '' %>>Point & Shoot</option>
            <option value="action" <%= product.cameraType === 'action' ? 'selected' : '' %>>Action Camera</option>
            <option value="drone" <%= product.cameraType === 'drone' ? 'selected' : '' %>>Drone Camera</option>
          </select>
        </div>
        <div id="lensSpecs" class="spec-group hidden">
          <label class="block text-sm font-medium">Lens Mount</label>
          <select name="lensMount" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="canon-ef" <%= product.lensMount === 'canon-ef' ? 'selected' : '' %>>Canon EF</option>
            <option value="canon-rf" <%= product.lensMount === 'canon-rf' ? 'selected' : '' %>>Canon RF</option>
            <option value="nikon-f" <%= product.lensMount === 'nikon-f' ? 'selected' : '' %>>Nikon F</option>
            <option value="nikon-z" <%= product.lensMount === 'nikon-z' ? 'selected' : '' %>>Nikon Z</option>
            <option value="sony-e" <%= product.lensMount === 'sony-e' ? 'selected' : '' %>>Sony E</option>
            <option value="fujifilm-x" <%= product.lensMount === 'fujifilm-x' ? 'selected' : '' %>>Fujifilm X</option>
          </select>
          <label class="block text-sm font-medium mt-3">Focal Length</label>
          <select name="focalLength" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="14mm" <%= product.focalLength === '14mm' ? 'selected' : '' %>>14mm</option>
            <option value="24mm" <%= product.focalLength === '24mm' ? 'selected' : '' %>>24mm</option>
            <option value="35mm" <%= product.focalLength === '35mm' ? 'selected' : '' %>>35mm</option>
            <option value="50mm" <%= product.focalLength === '50mm' ? 'selected' : '' %>>50mm</option>
            <option value="85mm" <%= product.focalLength === '85mm' ? 'selected' : '' %>>85mm</option>
            <option value="100mm" <%= product.focalLength === '100mm' ? 'selected' : '' %>>100mm</option>
            <option value="200mm" <%= product.focalLength === '200mm' ? 'selected' : '' %>>200mm</option>
            <option value="300mm" <%= product.focalLength === '300mm' ? 'selected' : '' %>>300mm</option>
            <option value="400mm" <%= product.focalLength === '400mm' ? 'selected' : '' %>>400mm</option>
            <option value="600mm" <%= product.focalLength === '600mm' ? 'selected' : '' %>>600mm</option>
          </select>
          <label class="block text-sm font-medium mt-3">F-Aperture</label>
          <select name="fAperture" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="f/1.2" <%= product.fAperture === 'f/1.2' ? 'selected' : '' %>>f/1.2</option>
            <option value="f/1.4" <%= product.fAperture === 'f/1.4' ? 'selected' : '' %>>f/1.4</option>
            <option value="f/1.8" <%= product.fAperture === 'f/1.8' ? 'selected' : '' %>>f/1.8</option>
            <option value="f/2" <%= product.fAperture === 'f/2' ? 'selected' : '' %>>f/2</option>
            <option value="f/2.8" <%= product.fAperture === 'f/2.8' ? 'selected' : '' %>>f/2.8</option>
            <option value="f/3.5" <%= product.fAperture === 'f/3.5' ? 'selected' : '' %>>f/3.5</option>
            <option value="f/4" <%= product.fAperture === 'f/4' ? 'selected' : '' %>>f/4</option>
            <option value="f/5.6" <%= product.fAperture === 'f/5.6' ? 'selected' : '' %>>f/5.6</option>
            <option value="f/8" <%= product.fAperture === 'f/8' ? 'selected' : '' %>>f/8</option>
            <option value="f/11" <%= product.fAperture === 'f/11' ? 'selected' : '' %>>f/11</option>
            <option value="f/16" <%= product.fAperture === 'f/16' ? 'selected' : '' %>>f/16</option>
            <option value="f/22" <%= product.fAperture === 'f/22' ? 'selected' : '' %>>f/22</option>
          </select>
          <label class="block text-sm font-medium mt-3">Lens Type</label>
          <select name="lensType" class="mt-1 w-full border rounded px-3 py-2" disabled>
            <option value="">Select</option>
            <option value="prime" <%= product.lensType === 'prime' ? 'selected' : '' %>>Prime</option>
            <option value="zoom" <%= product.lensType === 'zoom' ? 'selected' : '' %>>Zoom</option>
            <option value="macro" <%= product.lensType === 'macro' ? 'selected' : '' %>>Macro</option>
            <option value="telephoto" <%= product.lensType === 'telephoto' ? 'selected' : '' %>>Telephoto</option>
            <option value="wide-angle" <%= product.lensType === 'wide-angle' ? 'selected' : '' %>>Wide Angle</option>
            <option value="standard" <%= product.lensType === 'standard' ? 'selected' : '' %>>Standard</option>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium">Availability</label>
          <select name="availability" class="mt-1 w-full border rounded px-3 py-2">
            <option value="">Auto (by stock)</option>
            <option value="in-stock" <%= product.availability === 'in-stock' ? 'selected' : '' %>>In Stock</option>
            <option value="pre-order" <%= product.availability === 'pre-order' ? 'selected' : '' %>>Pre-order</option>
            <option value="backorder" <%= product.availability === 'backorder' ? 'selected' : '' %>>Back Order</option>
          </select>
        </div>
      </div>

      <!-- Stock -->
      <div>
        <label for="stock" class="block text-sm font-medium">Stock</label>
        <input type="number" name="stock" id="stock" value="<%= product.stock %>"
               class="mt-1 w-full border rounded px-3 py-2" required min="0" />
      </div>

      <!-- Description -->
      <div>
        <label for="description" class="block text-sm font-medium">Description</label>
        <textarea name="description" id="description"
                  class="mt-1 w-full border rounded px-3 py-2" rows="3" required><%= product.description %></textarea>
      </div>

      <!-- Category -->
      <div>
        <label for="category" class="block text-sm font-medium">Category</label>
        <select name="category" id="category" class="mt-1 w-full border rounded px-3 py-2" required>
          <option value="">Select Category</option>
          <% (categories || []).forEach(cat => { %>
            <option value="<%= cat._id %>" <%= product.category && String(product.category._id) === String(cat._id) ? 'selected' : '' %>>
              <% if (cat.parentCategory) { %>
                <%= cat.parentCategory.name %> > <%= cat.name %>
              <% } else { %>
                <%= cat.name %>
              <% } %>
            </option>
          <% }) %>
        </select>
      </div>

      <!-- Image Upload & Crop -->
      <div class="grid grid-cols-1 sm:grid-cols-3 gap-6">
        <% for (let i = 0; i < 3; i++) { %>
          <div class="space-y-2">
            <label class="block text-sm font-medium">Image <%= i + 1 %></label>

            <input type="file" accept="image/*" class="imageInput hidden" id="imageInput<%= i %>"/>
            <button type="button" onclick="document.getElementById('imageInput<%= i %>').click()"
                    class="inline-flex items-center gap-2 px-3 py-2 bg-white border border-gray-300 rounded shadow-sm hover:bg-gray-50 text-sm">
              <span>Choose Image</span>
            </button>

            <div class="border rounded overflow-hidden w-full h-40 bg-gray-100 flex items-center justify-center">
              <img id="preview<%= i %>" src="<%= product.images[i] || '' %>" alt="Preview" class="max-h-full" />
            </div>

            <!-- Hidden input to hold base64 cropped image -->
            <input type="hidden" name="croppedImages[]" id="croppedImage<%= i %>" />
            <!-- Include existing image name if not changed -->
            <input type="hidden" name="existingImages[]" value="<%= product.images[i] || '' %>" />
          </div>
        <% } %>
      </div>

      <!-- Submit -->
      <div>
        <button type="submit" class="mt-6 px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
          Update Product
        </button>
      </div>
    </form>
  </div>

  <!-- Cropper Modal -->
  <div id="cropperModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white p-4 rounded shadow max-w-lg w-full">
      <div class="text-right">
        <button onclick="closeCropper()" class="text-gray-600 hover:text-black">&times;</button>
      </div>
      <div>
        <img id="cropperImage" class="max-w-full max-h-[60vh] mx-auto" />
      </div>
      <div class="text-center mt-4">
        <button onclick="cropImage()" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Crop & Set Image</button>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <script>
    let currentCropper;
    const categorySelect = document.getElementById('category');
    function setGroupVisible(groupEl, visible){
      if (!groupEl) return;
      groupEl.classList.toggle('hidden', !visible);
      groupEl.querySelectorAll('select, input, textarea').forEach(el => { el.disabled = !visible; });
    }
    function updateSpecGroups(){
      const selectedText = (categorySelect.options[categorySelect.selectedIndex]?.textContent || '').toLowerCase();
      const isLens = selectedText.includes('lens');
      const isCamera = selectedText.includes('camera');
      const cameraSpecs = document.getElementById('cameraSpecs');
      const lensSpecs = document.getElementById('lensSpecs');
      setGroupVisible(cameraSpecs, isCamera && !isLens);
      setGroupVisible(lensSpecs, isLens);
    }
    categorySelect?.addEventListener('change', updateSpecGroups);
    updateSpecGroups();
    let currentIndex;

    const imageInputs = document.querySelectorAll('.imageInput');
    imageInputs.forEach((input, index) => {
      input.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (!file) return;

        currentIndex = index;
        const reader = new FileReader();
        reader.onload = function (e) {
          const cropperImage = document.getElementById('cropperImage');
          cropperImage.src = e.target.result;

          document.getElementById('cropperModal').classList.remove('hidden');

          if (currentCropper) {
            currentCropper.destroy();
          }

          setTimeout(() => {
            currentCropper = new Cropper(cropperImage, {
              aspectRatio: 1,
              viewMode: 1,
              autoCropArea: 1,
            });
          }, 100);
        };
        reader.readAsDataURL(file);
      });
    });

    function closeCropper() {
      document.getElementById('cropperModal').classList.add('hidden');
      if (currentCropper) {
        currentCropper.destroy();
        currentCropper = null;
      }
    }

    function cropImage() {
      if (currentCropper) {
        const canvas = currentCropper.getCroppedCanvas({ width: 400, height: 400 });
        const base64 = canvas.toDataURL('image/jpeg');

        document.getElementById(`preview${currentIndex}`).src = base64;
        document.getElementById(`croppedImage${currentIndex}`).value = base64;

        closeCropper();
      }
    }
  </script>

  <script src="/js/inline-validator.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const editProductForm = document.querySelector('form');
      if (editProductForm) {
        window.attachInlineValidation(editProductForm);
      }
    });
  </script>

</body>
</html>
