<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Edit Product</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet"/>
</head>
<body class="bg-slate-50 font-sans text-slate-900">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <%- include('../partial/admin/sidebar') %>

    <!-- Main Content -->
    <main class="flex-1 p-8 overflow-y-auto">
      <!-- Header -->
      <div class="mb-8">
        <div class="flex items-center gap-4 mb-4">
          <a href="/admin/products" class="inline-flex items-center px-4 py-2 bg-slate-200 text-slate-700 rounded-xl font-bold hover:bg-slate-300 transition-all">
            ← Back to Products
          </a>
        </div>
        <h1 class="text-4xl font-black text-slate-900 tracking-tight">EDIT PRODUCT</h1>
        <p class="text-slate-600 font-medium mt-2">Update details for this product</p>
      </div>

      <div class="max-w-5xl mx-auto">
        <form action="/admin/products/edit/<%= product._id %>" method="POST" enctype="multipart/form-data" class="space-y-8" novalidate>
          <!-- Basic Information Card -->
          <div class="bg-white rounded-2xl shadow-xl p-8 border border-slate-200">
            <h2 class="text-2xl font-black text-slate-900 mb-6 flex items-center">
              <span class="bg-emerald-100 text-emerald-600 w-8 h-8 rounded-full flex items-center justify-center text-sm font-black mr-3">1</span>
              Basic Information
            </h2>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div class="md:col-span-2">
                <label class="block text-sm font-bold text-slate-700 mb-3" for="name">Product Name *</label>
                <input type="text" name="name" id="name" value="<%= product.name %>" required data-required
                  class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium text-lg focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all" />
                <p class="field-error mt-2 text-sm text-red-600 font-medium"></p>
              </div>

              <div>
                <label class="block text-sm font-bold text-slate-700 mb-3" for="price">Price (₹) *</label>
                <div class="relative">
                  <span class="absolute left-4 top-1/2 transform -translate-y-1/2 text-emerald-600 font-black text-lg">₹</span>
                  <input type="number" name="price" id="price" value="<%= product.price %>" required min="0" step="0.01" data-required
                    class="w-full border-2 border-slate-300 rounded-xl pl-8 pr-4 py-3 font-medium text-lg focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all" />
                </div>
                <p class="field-error mt-2 text-sm text-red-600 font-medium"></p>
              </div>

              <div>
                <label class="block text-sm font-bold text-slate-700 mb-3" for="brand">Brand</label>
                <input type="text" name="brand" id="brand" value="<%= product.brand || '' %>"
                  class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all" />
                <p class="field-error mt-2 text-sm text-red-600 font-medium"></p>
              </div>

              <div>
                <label class="block text-sm font-bold text-slate-700 mb-3" for="stock">Stock Quantity</label>
                <input type="number" name="stock" id="stock" value="<%= product.stock %>" min="0"
                  class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all" />
              </div>

              <div>
                <label class="block text-sm font-bold text-slate-700 mb-3">Availability Status</label>
                <select name="availability" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all bg-white">
                  <option value="">Auto (by stock)</option>
                  <option value="in-stock" <%= product.availability === 'in-stock' ? 'selected' : '' %>>In Stock</option>
                  <option value="pre-order" <%= product.availability === 'pre-order' ? 'selected' : '' %>>Pre-order</option>
                  <option value="backorder" <%= product.availability === 'backorder' ? 'selected' : '' %>>Back Order</option>
                </select>
              </div>

              <div class="md:col-span-2">
                <label class="block text-sm font-bold text-slate-700 mb-3" for="description">Description *</label>
                <textarea name="description" id="description" rows="4" required
                  class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all resize-none"><%= product.description %></textarea>
              </div>
            </div>
          </div>

          <!-- Category & Specifications Card -->
          <div class="bg-white rounded-2xl shadow-xl p-8 border border-slate-200">
            <h2 class="text-2xl font-black text-slate-900 mb-6 flex items-center">
              <span class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center text-sm font-black mr-3">2</span>
              Category & Specifications
            </h2>

            <div class="mb-6">
              <label class="block text-sm font-bold text-slate-700 mb-3" for="category">Product Category *</label>
              <select name="category" id="category" required class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-emerald-500 focus:ring-4 focus:ring-emerald-500/20 transition-all bg-white">
                <option value="">Select Category</option>
                <% (categories || []).forEach(cat => { %>
                  <option value="<%= cat._id %>" <%= product.category && String(product.category._id) === String(cat._id) ? 'selected' : '' %>>
                    <% if (cat.parentCategory) { %>
                      <%= cat.parentCategory.name %> > <%= cat.name %>
                    <% } else { %>
                      <%= cat.name %>
                    <% } %>
                  </option>
                <% }) %>
              </select>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div id="cameraSpecs" class="spec-group hidden">
                <label class="block text-sm font-bold text-slate-700 mb-2">Megapixel</label>
                <select name="megapixelBucket" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-blue-500 focus:ring-4 focus:ring-blue-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="12-16" <%= product.megapixelBucket === '12-16' ? 'selected' : '' %>>12-16 MP</option>
                  <option value="16-24" <%= product.megapixelBucket === '16-24' ? 'selected' : '' %>>16-24 MP</option>
                  <option value="24+" <%= product.megapixelBucket === '24+' ? 'selected' : '' %>>24+ MP</option>
                </select>
                <label class="block text-sm font-bold text-slate-700 mb-2 mt-3">Battery Type</label>
                <select name="batteryType" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-blue-500 focus:ring-4 focus:ring-blue-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="lithium-ion" <%= product.batteryType === 'lithium-ion' ? 'selected' : '' %>>Lithium Ion</option>
                  <option value="rechargeable" <%= product.batteryType === 'rechargeable' ? 'selected' : '' %>>Rechargeable</option>
                </select>
                <label class="block text-sm font-bold text-slate-700 mb-2 mt-3">Camera Type</label>
                <select name="cameraType" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-blue-500 focus:ring-4 focus:ring-blue-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="dslr" <%= product.cameraType === 'dslr' ? 'selected' : '' %>>DSLR</option>
                  <option value="mirrorless" <%= product.cameraType === 'mirrorless' ? 'selected' : '' %>>Mirrorless</option>
                  <option value="point-shoot" <%= product.cameraType === 'point-shoot' ? 'selected' : '' %>>Point & Shoot</option>
                  <option value="action" <%= product.cameraType === 'action' ? 'selected' : '' %>>Action Camera</option>
                  <option value="drone" <%= product.cameraType === 'drone' ? 'selected' : '' %>>Drone Camera</option>
                </select>
              </div>

              <div id="lensSpecs" class="spec-group hidden">
                <label class="block text-sm font-bold text-slate-700 mb-2">Lens Mount</label>
                <select name="lensMount" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-purple-500 focus:ring-4 focus:ring-purple-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="canon-ef" <%= product.lensMount === 'canon-ef' ? 'selected' : '' %>>Canon EF</option>
                  <option value="canon-rf" <%= product.lensMount === 'canon-rf' ? 'selected' : '' %>>Canon RF</option>
                  <option value="nikon-f" <%= product.lensMount === 'nikon-f' ? 'selected' : '' %>>Nikon F</option>
                  <option value="nikon-z" <%= product.lensMount === 'nikon-z' ? 'selected' : '' %>>Nikon Z</option>
                  <option value="sony-e" <%= product.lensMount === 'sony-e' ? 'selected' : '' %>>Sony E</option>
                  <option value="fujifilm-x" <%= product.lensMount === 'fujifilm-x' ? 'selected' : '' %>>Fujifilm X</option>
                </select>
                <label class="block text-sm font-bold text-slate-700 mb-2 mt-3">Focal Length</label>
                <select name="focalLength" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-purple-500 focus:ring-4 focus:ring-purple-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="14mm" <%= product.focalLength === '14mm' ? 'selected' : '' %>>14mm</option>
                  <option value="24mm" <%= product.focalLength === '24mm' ? 'selected' : '' %>>24mm</option>
                  <option value="35mm" <%= product.focalLength === '35mm' ? 'selected' : '' %>>35mm</option>
                  <option value="50mm" <%= product.focalLength === '50mm' ? 'selected' : '' %>>50mm</option>
                  <option value="85mm" <%= product.focalLength === '85mm' ? 'selected' : '' %>>85mm</option>
                  <option value="100mm" <%= product.focalLength === '100mm' ? 'selected' : '' %>>100mm</option>
                  <option value="200mm" <%= product.focalLength === '200mm' ? 'selected' : '' %>>200mm</option>
                  <option value="300mm" <%= product.focalLength === '300mm' ? 'selected' : '' %>>300mm</option>
                  <option value="400mm" <%= product.focalLength === '400mm' ? 'selected' : '' %>>400mm</option>
                  <option value="600mm" <%= product.focalLength === '600mm' ? 'selected' : '' %>>600mm</option>
                </select>
                <label class="block text-sm font-bold text-slate-700 mb-2 mt-3">F-Aperture</label>
                <select name="fAperture" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-purple-500 focus:ring-4 focus:ring-purple-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="f/1.2" <%= product.fAperture === 'f/1.2' ? 'selected' : '' %>>f/1.2</option>
                  <option value="f/1.4" <%= product.fAperture === 'f/1.4' ? 'selected' : '' %>>f/1.4</option>
                  <option value="f/1.8" <%= product.fAperture === 'f/1.8' ? 'selected' : '' %>>f/1.8</option>
                  <option value="f/2" <%= product.fAperture === 'f/2' ? 'selected' : '' %>>f/2</option>
                  <option value="f/2.8" <%= product.fAperture === 'f/2.8' ? 'selected' : '' %>>f/2.8</option>
                  <option value="f/3.5" <%= product.fAperture === 'f/3.5' ? 'selected' : '' %>>f/3.5</option>
                  <option value="f/4" <%= product.fAperture === 'f/4' ? 'selected' : '' %>>f/4</option>
                  <option value="f/5.6" <%= product.fAperture === 'f/5.6' ? 'selected' : '' %>>f/5.6</option>
                  <option value="f/8" <%= product.fAperture === 'f/8' ? 'selected' : '' %>>f/8</option>
                  <option value="f/11" <%= product.fAperture === 'f/11' ? 'selected' : '' %>>f/11</option>
                  <option value="f/16" <%= product.fAperture === 'f/16' ? 'selected' : '' %>>f/16</option>
                  <option value="f/22" <%= product.fAperture === 'f/22' ? 'selected' : '' %>>f/22</option>
                </select>
                <label class="block text-sm font-bold text-slate-700 mb-2 mt-3">Lens Type</label>
                <select name="lensType" class="w-full border-2 border-slate-300 rounded-xl px-4 py-3 font-medium focus:outline-none focus:border-purple-500 focus:ring-4 focus:ring-purple-500/20 transition-all bg-white" disabled>
                  <option value="">Select</option>
                  <option value="prime" <%= product.lensType === 'prime' ? 'selected' : '' %>>Prime</option>
                  <option value="zoom" <%= product.lensType === 'zoom' ? 'selected' : '' %>>Zoom</option>
                  <option value="macro" <%= product.lensType === 'macro' ? 'selected' : '' %>>Macro</option>
                  <option value="telephoto" <%= product.lensType === 'telephoto' ? 'selected' : '' %>>Telephoto</option>
                  <option value="wide-angle" <%= product.lensType === 'wide-angle' ? 'selected' : '' %>>Wide Angle</option>
                  <option value="standard" <%= product.lensType === 'standard' ? 'selected' : '' %>>Standard</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Image Upload Card -->
          <div class="bg-white rounded-2xl shadow-xl p-8 border border-slate-200">
            <h2 class="text-2xl font-black text-slate-900 mb-6 flex items-center">
              <span class="bg-purple-100 text-purple-600 w-8 h-8 rounded-full flex items-center justify-center text-sm font-black mr-3">3</span>
              Product Images
            </h2>

            <div class="grid grid-cols-1 sm:grid-cols-3 gap-6">
              <% for (let i = 0; i < 3; i++) { %>
                <div class="space-y-2">
                  <label class="block text-sm font-medium">Image <%= i + 1 %></label>
                  <input type="file" accept="image/*" class="imageInput hidden" id="imageInput<%= i %>"/>
                  <button type="button" onclick="document.getElementById('imageInput<%= i %>').click()" class="inline-flex items-center gap-2 px-3 py-2 bg-white border-2 border-slate-300 rounded-xl shadow-sm hover:bg-gray-50 text-sm font-semibold">
                    Choose Image
                  </button>
                  <div class="border-2 border-slate-200 rounded-xl overflow-hidden w-full h-40 bg-gray-50 flex items-center justify-center">
                    <img id="preview<%= i %>" src="<%= product.images[i] || '' %>" alt="Preview" class="max-h-full" />
                  </div>
                  <input type="hidden" name="croppedImages[]" id="croppedImage<%= i %>" />
                  <input type="hidden" name="existingImages[]" value="<%= product.images[i] || '' %>" />
                </div>
              <% } %>
            </div>
          </div>

          <!-- Submit Button -->
          <div class="bg-white rounded-2xl shadow-xl p-8 border border-slate-200">
            <div class="flex items-center justify-between">
              <div>
                <h3 class="text-xl font-bold text-slate-900">Ready to update?</h3>
                <p class="text-slate-600 font-medium">Review your changes before saving</p>
              </div>
              <button type="submit" class="px-12 py-4 text-lg font-black bg-emerald-600 text-white rounded-xl shadow-lg hover:bg-emerald-700 hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200">
                UPDATE PRODUCT
              </button>
            </div>
          </div>
        </form>
      </div>
    </main>
  </div>

  <!-- Cropper Modal -->
  <div id="cropperModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white p-4 rounded shadow max-w-lg w-full">
      <div class="text-right">
        <button onclick="closeCropper()" class="text-gray-600 hover:text-black">&times;</button>
      </div>
      <div>
        <img id="cropperImage" class="max-w-full max-h-[60vh] mx-auto" />
      </div>
      <div class="text-center mt-4">
        <button onclick="cropImage()" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Crop & Set Image</button>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <script>
    let currentCropper;
    const categorySelect = document.getElementById('category');
    function setGroupVisible(groupEl, visible){
      if (!groupEl) return;
      groupEl.classList.toggle('hidden', !visible);
      groupEl.querySelectorAll('select, input, textarea').forEach(el => { el.disabled = !visible; });
    }
    function updateSpecGroups(){
      const selectedText = (categorySelect.options[categorySelect.selectedIndex]?.textContent || '').toLowerCase();
      const isLens = selectedText.includes('lens');
      const isCamera = selectedText.includes('camera');
      const cameraSpecs = document.getElementById('cameraSpecs');
      const lensSpecs = document.getElementById('lensSpecs');
      setGroupVisible(cameraSpecs, isCamera && !isLens);
      setGroupVisible(lensSpecs, isLens);
    }
    categorySelect?.addEventListener('change', updateSpecGroups);
    updateSpecGroups();
    let currentIndex;

    const imageInputs = document.querySelectorAll('.imageInput');
    imageInputs.forEach((input, index) => {
      input.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (!file) return;

        currentIndex = index;
        const reader = new FileReader();
        reader.onload = function (e) {
          const cropperImage = document.getElementById('cropperImage');
          cropperImage.src = e.target.result;

          document.getElementById('cropperModal').classList.remove('hidden');

          if (currentCropper) {
            currentCropper.destroy();
          }

          setTimeout(() => {
            currentCropper = new Cropper(cropperImage, {
              aspectRatio: 1,
              viewMode: 1,
              autoCropArea: 1,
            });
          }, 100);
        };
        reader.readAsDataURL(file);
      });
    });

    function closeCropper() {
      document.getElementById('cropperModal').classList.add('hidden');
      if (currentCropper) {
        currentCropper.destroy();
        currentCropper = null;
      }
    }

    function cropImage() {
      if (currentCropper) {
        const canvas = currentCropper.getCroppedCanvas({ width: 400, height: 400 });
        const base64 = canvas.toDataURL('image/jpeg');

        document.getElementById(`preview${currentIndex}`).src = base64;
        document.getElementById(`croppedImage${currentIndex}`).value = base64;

        closeCropper();
      }
    }
  </script>

  <script src="/js/inline-validator.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const editProductForm = document.querySelector('form');
      if (editProductForm) {
        window.attachInlineValidation(editProductForm);
      }
    });
  </script>

</body>
</html>
