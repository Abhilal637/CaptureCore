<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin â€“ Category Management</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-100 font-sans text-gray-800">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <%- include('../partial/admin/sidebar') %>
    <!-- Main Content -->
    <main class="flex-1 p-6">
      <!-- Header -->
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-semibold">CATEGORY</h1>
        <form method="get" action="/admin/category" class="flex items-center gap-2">
          <input type="text" name="search" value="<%= search || '' %>" placeholder="Search category..." class="border rounded px-3 py-2 text-sm" />
          <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded">Search</button>
          <% if (search) { %>
            <a href="/admin/category" class="px-4 py-2 bg-gray-300 text-gray-700 rounded">Clear</a>
          <% } %>
        </form>
      </div>
      <div class="flex justify-center gap-4 mb-8">
        <button id="openAddCategoryModal" class="px-6 py-3 text-lg font-bold bg-green-600 text-white rounded shadow hover:bg-green-700 transition-all">+ Add Category</button>
      </div>
      <!-- Modal (move outside flex container for proper z-index) -->
      <div id="addCategoryModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden">
        <div class="bg-white rounded-lg shadow-lg p-8 w-full max-w-md relative">
          <button id="closeAddCategoryModal" class="absolute top-2 right-2 text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
          <h2 class="text-xl font-bold mb-4 text-center">Add New Category</h2>
          <form method="post" action="/admin/category/add" class="flex flex-col gap-4">
            <input type="text" name="name" placeholder="Category Name" class="border rounded px-4 py-2 text-lg" required />
            <textarea name="description" placeholder="Category Description" class="border rounded px-4 py-2 text-lg" required></textarea>
            <button type="submit" class="px-4 py-2 text-lg font-bold bg-green-600 text-white rounded shadow hover:bg-green-700 transition-all">Add Category</button>
          </form>
        </div>
      </div>
      <!-- Category Table -->
      <div class="bg-white rounded shadow overflow-x-auto">
        <table class="min-w-full text-sm">
          <thead>
            <tr class="text-left text-xs uppercase text-gray-500 border-b bg-gray-50">
              <th class="p-3"><input type="checkbox" id="selectAllCategories" /></th>
              <th class="p-3 text-blue-700 font-bold">ID</th>
              <th class="p-3">Name</th>
              <th class="p-3">Description</th>
              <th class="p-3">Status</th>
              <th class="p-3">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (categories && categories.length) { %>
              <% categories.forEach(category => { %>
                <tr class="border-b hover:bg-gray-50">
                  <td class="p-3"><input type="checkbox" class="category-checkbox" /></td>
                  <td class="p-3 text-blue-700 font-mono font-bold bg-blue-50 rounded">#<%= category._id %></td>
                  <td class="p-3"><%= category.name %></td>
                  <td class="p-3"><%= category.description %></td>
                  <td class="p-3">
                    <% if (category.active) { %>
                      <span class="text-green-600 font-semibold">Active</span>
                    <% } else { %>
                      <span class="text-red-600 font-semibold">Inactive</span>
                    <% } %>
                  </td>
                  <td class="p-3">
                    <a href="/admin/category/edit/<%= category._id %>" class="bg-blue-600 text-white px-3 py-1 text-xs rounded hover:bg-blue-700">Edit</a>
                    <button class="bg-red-600 text-white px-3 py-1 text-xs rounded hover:bg-red-700 delete-category-btn" data-id="<%= category._id %>">Delete</button>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr><td colspan="6" class="text-center p-4">No categories found.</td></tr>
            <% } %>
          </tbody>
        </table>
      </div>
      <!-- Pagination -->
      <div class="flex justify-between items-center mt-6">
        <form method="get" action="/admin/category" class="flex items-center space-x-2">
          <input type="hidden" name="search" value="<%= search || '' %>" />
          <button type="submit" name="page" value="<%= currentPage - 1 %>" class="px-4 py-2 text-sm bg-white rounded shadow hover:bg-gray-50" <%= currentPage === 1 ? 'disabled' : '' %>>Previous</button>
        </form>
        <span class="text-sm text-gray-600">Page <%= currentPage %> of <%= totalPages %></span>
        <form method="get" action="/admin/category" class="flex items-center space-x-2">
          <input type="hidden" name="search" value="<%= search || '' %>" />
          <button type="submit" name="page" value="<%= currentPage + 1 %>" class="px-4 py-2 text-sm bg-white rounded shadow hover:bg-gray-50" <%= currentPage === totalPages ? 'disabled' : '' %>>Next</button>
        </form>
      </div>
    </main>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const selectAll = document.getElementById('selectAllCategories');
      if (selectAll) {
        selectAll.addEventListener('change', function() {
          const checkboxes = document.querySelectorAll('.category-checkbox');
          checkboxes.forEach(cb => { cb.checked = selectAll.checked; });
        });
      }

      // Modal logic
      const openModalBtn = document.getElementById('openAddCategoryModal');
      const closeModalBtn = document.getElementById('closeAddCategoryModal');
      const modal = document.getElementById('addCategoryModal');
      const input = modal ? modal.querySelector('input[name="name"]') : null;
      if (openModalBtn && closeModalBtn && modal) {
        openModalBtn.addEventListener('click', function() {
          modal.classList.remove('hidden');
          setTimeout(() => { if (input) input.focus(); }, 100);
        });
        closeModalBtn.addEventListener('click', function() {
          modal.classList.add('hidden');
        });
        modal.addEventListener('click', function(e) {
          if (e.target === modal) {
            modal.classList.add('hidden');
          }
        });
        // Allow Enter to submit form
        if (input) {
          input.addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
              e.preventDefault();
              input.form.submit();
            }
          });
        }
      }

      // SweetAlert2 for delete confirmation and AJAX
      const deleteBtns = document.querySelectorAll('.delete-category-btn');
      deleteBtns.forEach(btn => {
        btn.addEventListener('click', function() {
          const categoryId = btn.getAttribute('data-id');
          if (!categoryId) return;
          Swal.fire({
            title: 'Delete Category?',
            text: 'Are you sure you want to delete this category?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/admin/category/delete/${categoryId}`, {
                method: 'GET',
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
              })
              .then(res => {
                if (res.ok) {
                  Swal.fire('Deleted!', 'Category has been deleted.', 'success').then(() => {
                    window.location.reload();
                  });
                } else {
                  Swal.fire('Error', 'Failed to delete category.', 'error');
                }
              })
              .catch(() => {
                Swal.fire('Error', 'Failed to delete category.', 'error');
              });
            }
          });
        });
      });
    });
  </script>
</body>
</html>
