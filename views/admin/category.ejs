<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin – Category Management</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-100 font-sans text-gray-800">
  <div class="flex min-h-screen">
    
    <!-- Sidebar -->
    <%- include('../partial/admin/sidebar') %>

    <!-- Main Content -->
    <main class="flex-1 p-6">
      <!-- Header -->
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-semibold">CATEGORY</h1>
        <form method="get" action="/admin/category" class="flex items-center gap-2">
          <input type="text" name="search" value="<%= search || '' %>" placeholder="Search category..." class="border rounded px-3 py-2 text-sm" />
          <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded">Search</button>
          <% if (search) { %>
            <a href="/admin/category" class="px-4 py-2 bg-gray-300 text-gray-700 rounded">Clear</a>
          <% } %>
        </form>
      </div>

      <div class="flex justify-center gap-4 mb-8">
        <button id="openAddCategoryModal" class="px-6 py-3 text-lg font-bold bg-green-600 text-white rounded shadow hover:bg-green-700 transition-all">+ Add Category</button>
      </div>

      <!-- Modal -->
      <div id="addCategoryModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden">
        <div class="bg-white rounded-lg shadow-lg p-8 w-full max-w-md relative">
          <button id="closeAddCategoryModal" class="absolute top-2 right-2 text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
          <h2 class="text-xl font-bold mb-4 text-center">Add New Category</h2>
          <form method="post" action="/admin/category/add" class="flex flex-col gap-4">
            <input type="text" name="name" placeholder="Category Name" class="border rounded px-4 py-2 text-lg" required />
            <textarea name="description" placeholder="Category Description" class="border rounded px-4 py-2 text-lg" required></textarea>
            <button type="submit" class="px-4 py-2 text-lg font-bold bg-green-600 text-white rounded shadow hover:bg-green-700 transition-all">Add Category</button>
          </form>
        </div>
      </div>

      <!-- Category Table -->
      <div class="bg-white rounded shadow overflow-x-auto">
        <table class="min-w-full text-sm">
          <thead>
            <tr class="text-left text-xs uppercase text-gray-500 border-b bg-gray-50">
              <th class="p-3">ID</th>
              <th class="p-3">Name</th>
              <th class="p-3">Description</th>
              <th class="p-3">Status</th>
              <th class="p-3">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (categories && categories.length) { %>
              <% categories.forEach(category => { %>
                <tr class="border-b hover:bg-gray-50">
                  <td class="p-3 text-blue-700 font-mono font-bold">#<%= category._id %></td>
                  <td class="p-3"><%= category.name %></td>
                  <td class="p-3"><%= category.description %></td>
                  <td class="p-3">
                    <label class="inline-flex items-center cursor-pointer">
                      <input type="checkbox" class="sr-only toggle-category-status" data-id="<%= category._id %>" <%= category.active ? 'checked' : '' %>>
                      <div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-green-500 relative">
                        <div class="absolute left-1 top-1 bg-white w-4 h-4 rounded-full transition-transform peer-checked:translate-x-5"></div>
                      </div>
                      <span class="ml-2 text-sm"><%= category.active ? 'Active' : 'Inactive' %></span>
                    </label>
                  </td>
                  <td class="p-3">
                    <a href="/admin/category/edit/<%= category._id %>" class="bg-blue-600 text-white px-3 py-1 text-xs rounded hover:bg-blue-700">Edit</a>
                    <button class="bg-red-600 text-white px-3 py-1 text-xs rounded hover:bg-red-700 delete-category-btn" data-id="<%= category._id %>">Delete</button>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr><td colspan="5" class="text-center p-4">No categories found.</td></tr>
            <% } %>
          </tbody>
        </table>
      </div>

    </main>
  </div>

 <script>
  // Modal functionality
  document.getElementById('openAddCategoryModal').onclick = () => {
    document.getElementById('addCategoryModal').classList.remove('hidden');
  };

  document.getElementById('closeAddCategoryModal').onclick = () => {
    document.getElementById('addCategoryModal').classList.add('hidden');
  };

  document.getElementById('addCategoryModal').addEventListener('click', (e) => {
    if (e.target.id === 'addCategoryModal') {
      e.target.classList.add('hidden');
    }
  });

  // ✅ Toggle switch for category status (PATCH)
  document.querySelectorAll('.toggle-category-status').forEach((toggle) => {
    toggle.addEventListener('change', async () => {
      const categoryId = toggle.dataset.id;
      const isActive = toggle.checked;

      try {
        const response = await fetch(`/admin/category/toggle/${categoryId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify({ active: isActive }),
        });

        const result = await response.json();

        if (response.ok && result.success) {
          Swal.fire('Success', result.message, 'success').then(() => location.reload());
        } else {
          Swal.fire('Error', result.message || 'Failed to update category status.', 'error');
          toggle.checked = !isActive;
        }
      } catch (err) {
        Swal.fire('Error', 'Something went wrong.', 'error');
        toggle.checked = !isActive;
      }
    });
  });

  // ✅ Delete confirmation with SweetAlert
  document.querySelectorAll('.delete-category-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.getAttribute('data-id');
      Swal.fire({
        title: 'Delete Category?',
        text: 'This will remove the category permanently.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
      }).then(result => {
        if (result.isConfirmed) {
          fetch(`/admin/category/delete/${id}`, {
            method: 'GET',
            headers: { 'X-Requested-With': 'XMLHttpRequest' }
          }).then(res => {
            if (res.ok) {
              Swal.fire('Deleted!', 'Category deleted.', 'success').then(() => location.reload());
            } else {
              Swal.fire('Error!', 'Could not delete category.', 'error');
            }
          });
        }
      });
    });
  });
</script>
