<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>My Orders | CaptureCore</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 font-sans text-gray-800">
  <%- include('../partial/user/navbar') %>

  <%- include('../partial/user/profilesidebar') %>

  <!-- Profile Content -->
  <main class="flex-1">
    <div class="bg-gray-50 shadow rounded p-10">
      <!-- Header -->
      <div class="flex justify-between items-center mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">My Orders</h1>
          <% if (orders && orders.length > 0) { %>
            <span class="text-gray-600">(<%= pagination?.totalOrders || orders.length %> orders)</span>
          <% } %>
        </div>
        
        <form action="/search-orders" method="get" class="flex items-center gap-2">
          <input 
            type="text" 
            name="query" 
            value="<%= typeof query !== 'undefined' ? query : '' %>" 
            placeholder="Search by Order ID or Product Name" 
            class="px-4 py-2 rounded border border-gray-300 w-64 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          />
          <button 
            type="submit"
            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
          >
            Search
          </button>
          <a 
            href="/orders"
            class="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400 transition-colors"
          >
            Clear
          </a>
        </form>
      </div>

    <% if (orders && orders.length > 0) { %>
      <div class="space-y-6">
        <% orders.forEach(order => { %>
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-all duration-200">
            <div class="p-6">
              <div class="flex items-center justify-between">
                <!-- Left: Product Image and Basic Info -->
                <div class="flex items-center space-x-4">
                  <% if (order.items && order.items[0] && order.items[0].product) { %>
                    <img src="<%= order.items[0].product.images?.[0] || '/images/placeholder.png' %>"
                         alt="<%= order.items[0].product.name %>"
                         class="w-20 h-20 object-cover rounded-lg border border-gray-200">
                  <% } else { %>
                    <img src="/images/placeholder.png" alt="No product" class="w-20 h-20 object-cover rounded-lg border border-gray-200">
                  <% } %>
                  
                  <div>
                    <h3 class="text-lg font-semibold text-gray-900">Order #<%= order._id.toString().slice(-8) %></h3>
                    <p class="text-sm text-gray-600">Placed on <%= new Date(order.createdAt).toLocaleDateString('en-US', { 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    }) %></p>
                    <p class="text-sm text-gray-600"><%= order.items.length %> item<%= order.items.length > 1 ? 's' : '' %></p>
                  </div>
                </div>

                <!-- Center: Price and Status -->
                <div class="text-center">
                  <p class="text-xl font-bold text-gray-900">â‚¹<%= order.total.toFixed(2) %></p>
                  <div class="mt-2">
                    <% 
                      let statusColor = 'bg-gray-100 text-gray-800';
                      let statusText = order.status;
                      
                      switch(order.status) {
                        case 'Placed':
                          statusColor = 'bg-blue-100 text-blue-800';
                          break;
                        case 'Confirmed':
                          statusColor = 'bg-yellow-100 text-yellow-800';
                          break;
                        case 'Shipped':
                          statusColor = 'bg-purple-100 text-purple-800';
                          break;
                        case 'Out for Delivery':
                          statusColor = 'bg-orange-100 text-orange-800';
                          break;
                        case 'Delivered':
                          statusColor = 'bg-green-100 text-green-800';
                          break;
                        case 'Cancelled':
                          statusColor = 'bg-red-100 text-red-800';
                          break;
                        case 'Return Requested':
                          statusColor = 'bg-pink-100 text-pink-800';
                          break;
                        case 'Returned':
                          statusColor = 'bg-indigo-100 text-indigo-800';
                          break;
                      }
                    %>
                    <span class="px-3 py-1 rounded-full text-xs font-medium <%= statusColor %>">
                      <%= statusText %>
                    </span>
                  </div>
                </div>

                <!-- Right: Actions -->
                <div class="flex flex-col items-end space-y-2">
                  <a href="/order/<%= order._id %>" 
                     class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                    View Details
                  </a>
                  
                  <!-- <% /* Retry Payment removed from list; available in Order Details */ %> -->

                  <% if (order.status === 'Placed') { %>
                    <button class="inline-flex items-center px-3 py-1 text-red-600 hover:text-red-800 text-sm font-medium cancel-order-btn" 
                            data-order-id="<%= order.orderId %>">
                      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                      Cancel Order
                    </button>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      </div>

      <!-- Pagination -->
      <% if (pagination && pagination.totalPages > 1) { %>
        <div class="mt-10 flex justify-center items-center gap-2">
          <!-- Previous Button -->
          <% if (pagination.currentPage > 1) { %>
            <a href="/orders?page=<%= pagination.currentPage - 1 %>"
               class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 hover:text-gray-700 transition-colors">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Previous
            </a>
          <% } else { %>
            <span class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-200 rounded-lg cursor-not-allowed">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Previous
            </span>
          <% } %>

          <!-- Page Numbers -->
          <div class="flex items-center gap-1">
            <% for (let i = 1; i <= pagination.totalPages; i++) { %>
              <% if (i === 1 || i === pagination.totalPages || (i >= pagination.currentPage - 1 && i <= pagination.currentPage + 1)) { %>
                <a href="/orders?page=<%= i %>"
                   class="px-3 py-2 text-sm font-medium rounded-lg transition-colors
                         <%= i === pagination.currentPage 
                              ? 'bg-blue-600 text-white' 
                              : 'text-gray-500 bg-white border border-gray-300 hover:bg-gray-50 hover:text-gray-700' %>">
                  <%= i %>
                </a>
              <% } else if (i === pagination.currentPage - 2 || i === pagination.currentPage + 2) { %>
                <span class="px-2 py-2 text-gray-400">...</span>
              <% } %>
            <% } %>
          </div>

          <!-- Next Button -->
          <% if (pagination.currentPage < pagination.totalPages) { %>
            <a href="/orders?page=<%= pagination.currentPage + 1 %>"
               class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 hover:text-gray-700 transition-colors">
              Next
              <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          <% } else { %>
            <span class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-200 rounded-lg cursor-not-allowed">
              Next
              <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </span>
          <% } %>
        </div>
      <% } %>

    <% } else { %>
      <div class="text-center text-gray-500 py-20">
        <div class="text-6xl mb-4">ðŸ“¦</div>
        <div class="text-xl mb-2">No orders yet</div>
        <div class="text-gray-400">Start shopping to see your orders here!</div>
        <a href="/shop" class="inline-block mt-4 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition-colors">
          Browse Products
        </a>
      </div>
    <% } %> 
    </div>
  </main>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.cancel-order-btn').forEach(button => {
        button.addEventListener('click', async (e) => {
          e.preventDefault();
          const orderId = button.dataset.orderId;
          const card = button.closest('.bg-white');

          const confirm = await Swal.fire({
            title: 'Cancel Order?',
            text: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel it!',
            cancelButtonText: 'Keep it',
            confirmButtonColor: '#dc2626'
          });

          if (!confirm.isConfirmed) return;

          try {
            const res = await fetch(`/order/${orderId}/cancel`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' }
            });

            const data = await res.json();

            if (data.success) {
              Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success')
                .then(() => {
                  location.reload(); // Reload page to show updated status
                });
            } else {
              Swal.fire('Error', data.message || 'Failed to cancel order.', 'error');
            }
          } catch (err) {
            Swal.fire('Error', 'Something went wrong. Try again later.', 'error');
          }
        });
      });
    });
  </script>
</body>
</html>
